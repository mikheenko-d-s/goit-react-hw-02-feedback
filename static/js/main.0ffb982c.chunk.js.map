{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css","components/Notification/Notification.module.css","components/Container/Container.js","components/Layout/Layout.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","data/constanse.js","components/App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Layout","Section","title","Title","FeedbackButton","feedback","onLeaveFeedback","type","onClick","Button","FeedbackOptions","options","BtnList","map","option","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","StatisticsList","StatisticsItem","FEEDBACK_OPTIONS","App","state","handleFeedback","e","target","dataset","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ffb982c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatisticsList\":\"Statistics_StatisticsList__2Grrk\",\"StatisticsItem\":\"Statistics_StatisticsItem__2XtU0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__3HSzf\",\"Title\":\"Section_Title__3LoEC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BtnList\":\"FeedbackOptions_BtnList__qAqZZ\",\"Button\":\"FeedbackOptions_Button__19R8M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2M0tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__3-8DB\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Container from '../Container';\r\n\r\nconst Layout = ({ children }) => <Container>{children}</Container>;\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout;","import PropTypes from 'prop-types';\r\n\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.Section}>\r\n    <h2 className={styles.Title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\n\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackButton = ({ feedback, onLeaveFeedback }) => {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      data-feedback={feedback}\r\n      onClick={onLeaveFeedback}\r\n      className={styles.Button}\r\n    >\r\n      {feedback}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className={styles.BtnList}>\r\n      {options.map(option => (\r\n        <FeedbackButton feedback={option} onLeaveFeedback={onLeaveFeedback} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string),\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={styles.Notification}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import PropTypes from 'prop-types';\r\n\r\nimport Notification from '../Notification';\r\n\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    {total > 0 && (\r\n      <ul className={styles.StatisticsList}>\r\n        <li className={styles.StatisticsItem}>Good: {good}</li>\r\n        <li className={styles.StatisticsItem}>Neutral: {neutral}</li>\r\n        <li className={styles.StatisticsItem}>Bad: {bad}</li>\r\n        <li className={styles.StatisticsItem}>Total: {total}</li>\r\n        <li className={styles.StatisticsItem}>\r\n          Positive feedback: {positivePercentage}%\r\n        </li>\r\n      </ul>\r\n    )}\r\n    {total === 0 && <Notification message=\"No feedback given\" />}\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","export const FEEDBACK_OPTIONS = ['good', 'neutral', 'bad'];","import React, { Component } from 'react';\r\n\r\nimport Layout from '../components/Layout';\r\n\r\nimport Section from '../components/Section';\r\nimport FeedbackOptions from '../components/FeedbackOptions';\r\nimport Statistics from '../components/Statistics';\r\n\r\nimport { FEEDBACK_OPTIONS } from '../data/constanse';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleFeedback = e => {\r\n    const { feedback } = e.target.dataset;\r\n    this.setState(prevState => ({ [feedback]: prevState[feedback] + 1 }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    return total ? Math.round((good / total) * 100) : 0;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage();\r\n\r\n    return (\r\n      <Layout>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={FEEDBACK_OPTIONS}\r\n            onLeaveFeedback={this.handleFeedback}\r\n          />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={total}\r\n            positivePercentage={positivePercentage}\r\n          />\r\n        </Section>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}